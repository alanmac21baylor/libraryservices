#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=alan
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:h2:mem:postgres
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=postgres
spring.datasource.password=alan
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.config.import=optional:configserver:http://localhost:8888
spring.application.name=BookManagementService
server.port=8080

eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.preferIpAddress=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

spring.main.allow-circular-references=true

resilience4j.circuitbreaker.instances.bookService.register-health-indicator=true
resilience4j.circuitbreaker.instances.bookService.ring-buffer-size-in-closed-state=5
resilience4j.circuitbreaker.instances.bookService.ring-buffer-size-in-half-open-state=3
resilience4j.circuitbreaker.instances.bookService.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.bookService.record-exceptions[0]=java.lang.RuntimeException
resilience4j.circuitbreaker.instances.bookService.record-exceptions[1]=java.io.IOException

logging.level.org.springframework.kafka=DEBUG

spring.cloud.stream.bindings.output.destination=bookChangeTopic
spring.cloud.stream.bindings.output.content-type=application/json
spring.cloud.stream.kafka.binder.zkNodes=kafka
spring.cloud.stream.kafka.binder.brokers=kafka

#keycloak.realm = lms-realm
#keycloak.auth-server-url = http://keycloak:8080/auth
#keycloak.ssl-required = external
#keycloak.resource = lmsclient
#keycloak.credentials.secret = oNhfez6mMsGIE5DdKtUp5V98hQ886TUD
#keycloak.use-resource-role-mappings = true
#keycloak.bearer-only = true