version: '3'
services:
  postgres-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: alan
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data


  config-service:
    build:
      context: ./config-service
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      SPRING_PROFILES_ACTIVE: dev  # or prod
    depends_on:
      - postgres-db
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: DOCKERFILE
    ports:
      - "8761:8761"
    environment:
      - EUREKA_CLIENT_REGISTER-WITH-EUREKA=false
      - EUREKA_CLIENT_FETCH-REGISTRY=false

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
  kafkaserver:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1,bookChangeTopic:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper

  book-management-service:
    build:
      context: ./BookManagementService
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-service:8888
    depends_on:
      - config-service
      - postgres-db
      - eureka-server
      - kafkaserver
  loan-management-service:
    build:
      context: ./LoanManagementService
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-service:8888
    depends_on:
      - config-service
      - postgres-db
      - eureka-server
      - kafkaserver
  reader-management-service:
    build:
      context: ./ReaderManagementService
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    environment:
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-service:8888
    depends_on:
      - config-service
      - postgres-db
      - eureka-server
  gatewayserver:
    build:
      context: ./gatewayserver
      dockerfile: DOCKERFILE
    ports:
      - "8072:8072"
    environment:
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-service:8888
    depends_on:
      - config-service
      - eureka-server

#  keycloak:
#    image: jboss/keycloak
#    restart: always
#    environment:
#      KEYCLOAK_USER: admin
#      KEYCLOAK_PASSWORD: admin
#    volumes:
#      - ./realm-export.json:/opt/jboss/keycloak/realm-export.json
#    command:
#      - "-b 0.0.0.0"
#      - "-Dkeycloak.import=/opt/jboss/keycloak/realm-export.json"
#      - "-Dkeycloak.profile.feature.scripts=enabled"
#      - "-Dkeycloak.profile.feature.upload_scripts=enabled"
#    ports:
#      - "8080:8080"
#    networks:
#      backend:
#        aliases:
#          - "keycloak"

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
